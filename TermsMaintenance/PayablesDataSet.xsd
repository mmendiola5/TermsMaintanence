<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="PayablesDataSet" targetNamespace="http://tempuri.org/PayablesDataSet.xsd" xmlns:mstns="http://tempuri.org/PayablesDataSet.xsd" xmlns="http://tempuri.org/PayablesDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="PayablesConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="PayablesConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.TermsMaintenance.Properties.Settings.GlobalReference.Default.PayablesConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TermsTableAdapter" GeneratorDataComponentClassName="TermsTableAdapter" Name="Terms" UserDataComponentName="TermsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PayablesConnectionString (Settings)" DbObjectName="Payables.dbo.Terms" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Terms] WHERE (([TermsID] = @Original_TermsID) AND ([Description] = @Original_Description) AND ([DueDays] = @Original_DueDays))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TermsID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TermsID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_DueDays" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="DueDays" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Terms] ([Description], [DueDays]) VALUES (@Description, @DueDays);
SELECT TermsID, Description, DueDays FROM Terms WHERE (TermsID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@DueDays" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="DueDays" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TermsID, Description, DueDays FROM dbo.Terms</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Terms] SET [Description] = @Description, [DueDays] = @DueDays WHERE (([TermsID] = @Original_TermsID) AND ([Description] = @Original_Description) AND ([DueDays] = @Original_DueDays));
SELECT TermsID, Description, DueDays FROM Terms WHERE (TermsID = @TermsID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@DueDays" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="DueDays" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TermsID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TermsID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_DueDays" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="DueDays" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TermsID" ColumnName="TermsID" DataSourceName="Payables.dbo.Terms" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TermsID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TermsID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TermsID" DataSetColumn="TermsID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="DueDays" DataSetColumn="DueDays" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="PayablesDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="PayablesDataSet" msprop:Generator_DataSetName="PayablesDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Terms" msprop:Generator_RowEvHandlerName="TermsRowChangeEventHandler" msprop:Generator_RowDeletedName="TermsRowDeleted" msprop:Generator_RowDeletingName="TermsRowDeleting" msprop:Generator_RowEvArgName="TermsRowChangeEvent" msprop:Generator_TablePropName="Terms" msprop:Generator_RowChangedName="TermsRowChanged" msprop:Generator_RowChangingName="TermsRowChanging" msprop:Generator_TableClassName="TermsDataTable" msprop:Generator_RowClassName="TermsRow" msprop:Generator_TableVarName="tableTerms" msprop:Generator_UserTableName="Terms">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TermsID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="TermsID" msprop:Generator_ColumnPropNameInTable="TermsIDColumn" msprop:Generator_ColumnVarNameInTable="columnTermsID" msprop:Generator_UserColumnName="TermsID" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DueDays" msprop:Generator_ColumnPropNameInRow="DueDays" msprop:Generator_ColumnPropNameInTable="DueDaysColumn" msprop:Generator_ColumnVarNameInTable="columnDueDays" msprop:Generator_UserColumnName="DueDays" type="xs:short" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Terms" />
      <xs:field xpath="mstns:TermsID" />
    </xs:unique>
  </xs:element>
</xs:schema>